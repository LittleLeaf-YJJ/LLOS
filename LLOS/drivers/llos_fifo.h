/*
 * 环形fifo
 * 作者: LittleLeaf All rights reserved
 * 版本: V1.0.0
 * 修订日期: 2025/02/25
 */
#ifndef __LLOS_FIFO_H
#define __LLOS_FIFO_H

#include <llos.h>

#ifdef __cplusplus
 extern "C" {
#endif

typedef struct
{
    uint32_t pHead;		/* 头指针 */
    uint32_t pEnd;		/* 尾指针 */
    uint32_t size;		/* 缓冲区大小 */
	uint8_t *pBuffer;	/* 缓冲区地址 */
}llos_fifo_t;

/*====================================================================================
 * 函数名: LLOS_FIFO_Init
 * 描述: 初始化fifo
 * 参数:
 *		fifo: 指定的缓冲区结构体
 *		buffer: 缓冲区地址
*		size: 缓冲区大小(要求为2的指数次幂大小)
 * 返回值: 错误码
 ====================================================================================*/
ll_err_t LLOS_FIFO_Init(llos_fifo_t *fifo, uint8_t *buffer, uint32_t size);

/*====================================================================================
 * 函数名: LLOS_FIFO_Clear
 * 描述: 重置fifo
 * 参数:
 *		fifo: 指定的缓冲区结构体
 ====================================================================================*/
void LLOS_FIFO_Clear(llos_fifo_t *fifo);

/*====================================================================================
 * 函数名: LLOS_FIFO_Get_UsedSize
 * 描述: 获取已使用的fifo大小
 * 参数:
 *		fifo: 指定的缓冲区结构体
 * 返回值: 已使用的fifo大小
 ====================================================================================*/
uint32_t LLOS_FIFO_Get_UsedSize(llos_fifo_t *fifo);

/*====================================================================================
 * 函数名: LLOS_FIFO_Get_AvailableLength
 * 描述: 获取剩余的的fifo大小
 * 参数:
 *		fifo: 指定的缓冲区结构体
 * 返回值: 剩余的fifo大小
 ====================================================================================*/
uint32_t LLOS_FIFO_Get_AvailableSize(llos_fifo_t *fifo);

/*====================================================================================
 * 函数名: LLOS_FIFO_Input
 * 描述: 数据输入
 * 参数:
 *		fifo: 指定的缓冲区结构体
 *		pData: 数据地址
 *		len: 数据长度
 * 返回值: 成功写入的数据量
 ====================================================================================*/
uint32_t LLOS_FIFO_Input(llos_fifo_t *fifo, const uint8_t *pData, uint32_t len);

/*====================================================================================
 * 函数名: LLOS_FIFO_Output
 * 描述: 数据输出
 * 参数:
 *		fifo: 指定的缓冲区结构体
 *		pData: 数据地址
 *		len: 数据长度
 * 返回值: 成功读出的数据量
 ====================================================================================*/
uint32_t LLOS_FIFO_Output(llos_fifo_t *fifo, uint8_t *pData, uint32_t len);

#ifdef __cplusplus
 }
#endif
 
#endif
